#! /usr/bin/env python3
import os
import json
from csv import DictReader
import requests
from bs4 import BeautifulSoup
from pinterest import PinterestImageScraper
import shutil

with open("heroes_information.csv", 'r') as heroesInfo:
    csvReader = DictReader(heroesInfo)
    unsortedListHero = list(csvReader)

def filter(unsortedListHero: list):
    def isMarvelOrDc(element: str):
        return (element == "Marvel Comics" or element == "DC Comics")

    def isFirstEdition(element: str):
        return (not any(edition in element for edition in ['II', 'III', 'IV', 'V', 'VI']))

    listHero = []
    for row in unsortedListHero:
        if (isMarvelOrDc(row['publisher']) and isFirstEdition(row['name'])):
            listHero.append(row)

    sortedHero = []
    listMultipleIndex = []
    for i in range(len(listHero)):
        multiple = []
        if listHero[i]['name'] == listHero[i - 1]['name']:
            for j in range(i - 1, len(listHero)):
                if listHero[i]['name'] == listHero[j]['name'] and listHero[i]['publisher'] == listHero[j]['publisher']:
                    multiple.append(j)
                else:
                    break
            i += len(multiple)
        if len(multiple):
            listMultipleIndex.append(multiple)

    def countMiss(index: int, listHero):
        count = 0
        for key in listHero[index]:
            if listHero[index][key] == '-':
                count += 1
        return (count)

    uniqueRow = []
    for multiple in listMultipleIndex:
        missInfo = []
        for index in multiple:
            missInfo.append(countMiss(index, listHero))
        uniqueRow.append(listHero[multiple[missInfo.index(min(missInfo))]])

    seen = set()
    new_l = []
    for d in uniqueRow:
        t = tuple(d.items())
        if t not in seen:
            seen.add(t)
            new_l.append(d)

    sortedHero = []
    for row in listHero:
        if not any(d['name'] == row['name'] for d in new_l):
            sortedHero.append(row)
    for row in new_l:
        sortedHero.append(row)

    tmp = set()
    finalHero = []
    id = 0
    for elem in sortedHero:
        if elem['name'] not in tmp:
            elem['id'] = id
            finalHero.append(elem)
            id += 1
            tmp.add(elem['name'])
    return (finalHero)

def getImage(heroList):
    for row in heroList:
        # Replace spaces in the name with +
        search_term = row['name'].replace(" ", "+") + "+comic+hero"
        # Build the URL for the Google Images search
        search_url = f"https://www.google.com/search?q={search_term}+image&rlz=1C1GCEU_enUS832US832&source=lnms&tbm=isch&sa=X&ved=0ahUKEwiO5M6Z5M_iAhXOyDgGHQslAQQ_AUIEigB&biw=1366&bih=657#imgrc=_"

        # Make a GET request to the URL
        response = requests.get(search_url)

        # If the request is successful (status code 200),
        if response.status_code == 200:
            # Parse the HTML content
            soup = BeautifulSoup(response.text, "html.parser")

            # Find the first image in the search results
            image_url = soup.find_all("img")[1].get('src')

            # Download the image
            image_response = requests.get(image_url)

            # Save the image to disk
            with open(f"images/{row['name']}.jpg", "wb") as f:
                f.write(image_response.content)
    return(heroList)

def rearrangeFile():
    src_dir = '.'
    dst_dir = 'images'
    if not os.path.exists(dst_dir):
        os.makedirs(dst_dir)

    for hero_dir in os.listdir(src_dir):
        if '_Comic' not in hero_dir:
            continue
        hero_path = os.path.join(src_dir, hero_dir)
        if os.path.isdir(hero_path):
            for file in os.listdir(hero_path):
                file_path = os.path.join(hero_path, file)
                if os.path.isfile(file_path):
                    hero_name = hero_dir.split('_')[0]
                    new_file_name = hero_name + '.png'
                    dst_path = os.path.join(dst_dir, new_file_name)
                    shutil.move(file_path, dst_path)
                    shutil.rmtree(hero_path, ignore_errors=True)

heroList = filter(unsortedListHero)
#herolist = getImage(heroList)
#rearrangeFile()
for row in heroList:
    row['images'] = row['name'] + '.jpg'
testJson = json.dumps(heroList, indent=2)
with open("hero.json", "w") as outfile:
    json.dump(heroList, outfile, indent=2)